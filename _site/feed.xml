<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2019-12-31T23:41:23+00:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">‘Scuse Me While I Think Out Loud</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Today - Persisting data across container runs</title><link href="http://0.0.0.0:4000/docker/volume/2019/12/31/bind-mount-and-jekyll.html" rel="alternate" type="text/html" title="Today - Persisting data across container runs" /><published>2019-12-31T09:49:17+00:00</published><updated>2019-12-31T09:49:17+00:00</updated><id>http://0.0.0.0:4000/docker/volume/2019/12/31/bind-mount-and-jekyll</id><content type="html" xml:base="http://0.0.0.0:4000/docker/volume/2019/12/31/bind-mount-and-jekyll.html">&lt;ul class=&quot;task-list&quot; style=&quot;list-style-type: none&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Day before yesterday review&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Yesterday review&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Notes from the &lt;a href=&quot;https://www.udemy.com/course/docker-mastery&quot;&gt;Docker Mastery&lt;/a&gt; course section on Container lifetime.&lt;/p&gt;

&lt;p&gt;Persisting data across container runs is done by either creating a named volume, or doing a bind mount.&lt;/p&gt;

&lt;h1 id=&quot;named-volumes&quot;&gt;Named Volumes&lt;/h1&gt;

&lt;p&gt;You can see what volumes are created with:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;docker volume ls&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If the Dockerfile you used to create the container has a “VOLUME /var/lib/mysql” type entry, a “Mounts” entry will be created for the container that has the mapping of the “Destination” (/var/lib/mysql) directory to the actual data “Source” directory on the local file system.  In this case it’s for mysql, and when the container runs it will use the volume name on the local file system mounted at the source directory.  Use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;docker container inspect &amp;lt;containerName&amp;gt;&lt;/code&gt; to see the “Mounts” details.&lt;/p&gt;

&lt;p&gt;So the container thinks it’s writing to /var/lib/mysql, but in actual fact it’s writing the “Source” directory.&lt;/p&gt;

&lt;p&gt;Its a good idea to actually name the volume when you create it because by itself, docker will create a guid type name i.e. it’s hard to pick out in a line up.  Here’s an example output where some of the volumes are named, and some are not:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  gitweb git:(master) ✗ docker volume ls
DRIVER              VOLUME NAME
local               48db87015dfcb89d017564cf03a2ef1b9dc84166f2af8a6458587fb8ecd888bb
local               064396c959ff1311550c89b63481caf6f6373838edf0c65b131f351e7452bdc2
local               f7ac27660a1541243da14188ad19a4a9456b5ffe8e514e0aad7c81de29a65996
local               mysql-db
local               psql-data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To name the volume, use -v mysql-db:/var/lib/mysql when you do the docker run.&lt;/p&gt;

&lt;p&gt;You can &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;docker volume inspect mysql-db&lt;/code&gt; to get info on when the volume was created, what driver was used and what the Mountpoint is.&lt;/p&gt;</content><author><name></name></author><summary type="html">Day before yesterday review Yesterday review</summary></entry><entry><title type="html">A few docker examples from the Udemy Course</title><link href="http://0.0.0.0:4000/jekyll/update/2019/12/26/docker-jekyll-setup.html" rel="alternate" type="text/html" title="A few docker examples from the Udemy Course" /><published>2019-12-26T12:51:31+00:00</published><updated>2019-12-26T12:51:31+00:00</updated><id>http://0.0.0.0:4000/jekyll/update/2019/12/26/docker-jekyll-setup</id><content type="html" xml:base="http://0.0.0.0:4000/jekyll/update/2019/12/26/docker-jekyll-setup.html">&lt;p&gt;Some notes from the &lt;a href=&quot;https://www.udemy.com/course/docker-mastery&quot;&gt;Docker Mastery&lt;/a&gt; course on Udemy.
Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].&lt;/p&gt;</content><author><name></name></author><summary type="html">Some notes from the Docker Mastery course on Udemy. Jekyll also offers powerful support for code snippets:</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://0.0.0.0:4000/jekyll/update/2019/12/26/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2019-12-26T08:50:31+00:00</published><updated>2019-12-26T08:50:31+00:00</updated><id>http://0.0.0.0:4000/jekyll/update/2019/12/26/welcome-to-jekyll</id><content type="html" xml:base="http://0.0.0.0:4000/jekyll/update/2019/12/26/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>